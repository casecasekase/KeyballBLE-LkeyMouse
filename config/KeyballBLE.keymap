#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_YEN          0x89              // ¥
#define JP_PIPE         LS(0x89)          // |
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_HANZEN       GRAVE             // 半角/全角

// マウススクロール用

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 25
#define ZMK_MOUSE_POINTING_SCRL_VAL 100
#define ZMK_POINTING_DEFAULT_SCRL_VAL 120

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_3: to_layer_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 3>, <&macro_press>, <&to 0>, <&macro_release>;

            label = "TO_LAYER_3";
        };

        tap_esc: tap_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&macro_tap>;

            label = "TAP_ESC";
        };
    };

    behaviors {
        // Escとレイヤー切り替えのHold-Tap動作

        esc_mo_layer: esc_mo_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC_MO_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        lay1_lay2_layer: lay1_lay2_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAY1_LAY2_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&to>;
        };

        mo_bs_an: mo_bs_an {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_BS_AN";
            bindings = <&kp JP_YEN>, <&kp JP_UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo_bs_pipe: mo_bs_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_BS_PIPE";
            bindings = <&kp JP_YEN>, <&kp JP_PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mop_left: mop_left {
            compatible = "zmk,behavior-mod-morph";
            label = "MOP_LEFT";
            bindings = <&mkp MB1>, <&mkp MB4>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        mop_right: mop_right {
            compatible = "zmk,behavior-mod-morph";
            label = "MOP_RIGHT";
            bindings = <&mkp MB2>, <&mkp MB5>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        zero_c: zero_c {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_C";
            bindings = <&bt BT_SEL 0>, <&bt BT_CLR_ALL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        lay0_lay2_layer: lay0_lay2_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LAY0_LAY2_LAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E                &kp R      &kp T                                  &kp Y                 &kp U  &kp I      &kp O      &kp P
&kp A      &kp S         &kp D                &kp F      &kp G    &mkp MB1        &kp PERIOD    &kp H                 &kp J  &kp K      &kp L      &kp BACKSPACE
&kp Z      &kp X         &kp C                &kp V      &kp B    &kp DELETE      &kp COMMA     &kp N                 &kp M  &kp MINUS  &kp SLASH  &kp ENTER
&kp LCTRL  &kp LEFT_ALT  &esc_mo_layer 3 ESC  &kp GRAVE  &kp TAB  &kp SPACE       &kp LEFT_WIN  &lay1_lay2_layer 2 1                               &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH  &kp DOLLAR  &kp PERCENT                                   &kp ASTRK             &kp LEFT_PARENTHESIS  &kp MINUS         &kp EQUAL          &mo_bs_pipe
&trans           &trans        &trans    &trans      &kp CARET          &trans         &kp PERIOD  &kp AMPERSAND         &kp EQUAL             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mo_bs_an
&trans           &trans        &trans    &trans      &kp DOUBLE_QUOTES  &kp COLON      &kp COMMA   &kp SLASH             &kp SEMICOLON         &kp SINGLE_QUOTE  &kp BACKSLASH      &kp ENTER
&kp LCTRL        &kp LEFT_ALT  &trans    &kp GRAVE   &kp TAB            &kp SPACE      &to 0       &lay0_lay2_layer 2 0                                                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp COLON  &kp DOUBLE_QUOTES                                        &kp F1   &kp F2  &kp F3  &kp F4   &kp F5
&kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp SLASH          &kp LC(LA(KP_NUMBER_0))      &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &kp BACKSPACE
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans             &trans                       &kp F11  &kp F12  &trans  &trans  &trans   &kp ENTER
&kp NUMBER_0  &kp PERIOD    &kp ENTER     &zero_c    &bt BT_SEL 1       &bt BT_SEL 2                 &trans   &trans                            &kp RIGHT_SHIFT
            >;
        };

        MOVE {
            bindings = <
&trans  &trans  &trans  &trans          &trans                                       &trans  &trans    &mop_left  &mop_right  &trans
&trans  &trans  &trans  &trans          &kp UP_ARROW    &trans               &trans  &trans  &mkp MB5  &mop_left  &mop_right  &trans
&trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW      &trans  &trans  &mkp MB4  &mop_left  &mop_right  &trans
&trans  &trans  &trans  &trans          &trans          &trans               &trans  &trans                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        persona {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
