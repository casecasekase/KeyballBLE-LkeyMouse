#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_YEN          0x89              // ¥
#define JP_PIPE         LS(0x89)          // |
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_HANZEN       GRAVE             // 半角/全角

// マウススクロール用

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo_bs_an: mo_bs_an {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_BS_AN";
            bindings = <&kp JP_YEN>, <&kp JP_UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo_bs_pipe: mo_bs_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "MO_BS_PIPE";
            bindings = <&kp JP_YEN>, <&kp JP_PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mop_left: mop_left {
            compatible = "zmk,behavior-mod-morph";
            label = "MOP_LEFT";
            bindings = <&mkp MB1>, <&mkp MB4>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        mop_right: mop_right {
            compatible = "zmk,behavior-mod-morph";
            label = "MOP_RIGHT";
            bindings = <&mkp MB2>, <&mkp MB5>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        zero_c: zero_c {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_C";
            bindings = <&bt BT_SEL 0>, <&bt BT_CLR_ALL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E       &kp R      &kp T                                &kp Y  &kp U  &kp I      &kp O       &kp P
&kp A      &kp S         &kp D       &kp F      &kp G    &mkp MB1        &kp MINUS   &kp H  &kp J  &kp K      &kp L       &kp BACKSPACE
&kp Z      &kp X         &kp C       &kp V      &kp B    &kp DELETE      &kp PERIOD  &kp N  &kp M  &mop_left  &mop_right  &kp ENTER
&kp LCTRL  &kp LEFT_ALT  &kp ESCAPE  &kp GRAVE  &kp TAB  &kp SPACE       &to 2       &to 1                                &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN     &kp HASH      &kp DOLLAR       &kp PERCENT                                   &kp ASTRK      &kp LEFT_PARENTHESIS  &kp MINUS         &kp EQUAL          &mo_bs_pipe
&kp LEFT_WIN     &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp CARET          &trans         &kp PERIOD  &kp AMPERSAND  &kp EQUAL             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mo_bs_an
&trans           &trans          &trans        &kp DOWN_ARROW   &kp DOUBLE_QUOTES  &kp COLON      &kp COMMA   &kp SLASH      &kp SEMICOLON         &kp SINGLE_QUOTE  &kp BACKSLASH      &kp ENTER
&kp LCTRL        &kp LEFT_ALT    &kp ESCAPE    &kp GRAVE        &kp TAB            &kp SPACE      &to 2       &to 0                                                                     &kp RIGHT_SHIFT
            >;
        };

        NUM {
            bindings = <
&kp N1  &kp N2          &kp NUMBER_3  &kp NUMBER_4     &kp N5                                                &kp NUMBER_6       &kp N7      &kp N8     &kp N9      &kp N0
&trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp COLON     &kp LC(LA(KP_NUMBER_0))      &kp EQUAL  &kp DOUBLE_QUOTES  &kp PERIOD  &trans     &trans      &kp BACKSPACE
&trans  &trans          &trans        &kp DOWN_ARROW   &kp MINUS     &trans                       &trans     &kp SLASH          &trans      &mop_left  &mop_right  &kp ENTER
&trans  &trans          &trans        &zero_c          &bt BT_SEL 1  &bt BT_SEL 2                 &to 0      &to 1                                                 &kp RIGHT_SHIFT
            >;
        };
    };
};
